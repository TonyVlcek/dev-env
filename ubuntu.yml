---
- hosts: localhost
  vars:
    username: pbassiner
    home: /home/{{ username }}
    repositories: # ubuntu 16.04
     docker:
      repository: deb https://apt.dockerproject.org/repo ubuntu-xenial main
      keyserver: hkp://p80.pool.sks-keyservers.net:80
      key: 58118E89F3A912897C070ADBF76221572C52609D
     dropbox:
      repository: deb http://linux.dropbox.com/ubuntu xenial main
      keyserver: pgp.mit.edu
      key: 1C61A2656FB57B7E4DE0F4C1FC918B335044912E
    packages:
     - vim
     - zsh
     - terminator
     - keepassx
     - dropbox
     - docker-engine
     - mysql-workbench
    debs:
     sublimetext:
      name: Sublime Text 3
      url: https://download.sublimetext.com/sublime-text_build-3114_amd64.deb
     atom:
      name: Atom
      url: https://atom.io/download/deb
     chrome:
      name: Google chrome
      url: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    targzs:
      hub:
       name: hub
       url: https://github.com/github/hub/releases/download/v2.2.3/hub-linux-amd64-2.2.3.tgz
       target_dir: "{{ home }}"
      intellij:
       name: IntelliJ IDEA
       url: https://download.jetbrains.com/idea/ideaIC-2016.1.2b.tar.gz
       target_dir: "{{ home }}"
  tasks:
   - name: Add apt keys
     become: yes
     apt_key: keyserver={{ item.value.keyserver }} id={{ item.value.key }}
     with_dict: "{{ repositories }}"
   - name: Add apt repositories
     become: yes
     apt_repository: repo={{ item.value.repository }}
     with_dict: "{{ repositories }}"
   - name: Install packages
     become: yes
     apt: pkg={{ item }} state=latest update_cache=true
     with_items: "{{ packages }}"  
   - name: Download .deb files
     get_url: url={{ item.value.url }} dest=/tmp/{{ item.key }}.deb validate_certs=no
     with_dict: "{{ debs }}"
   - name: Install .deb files
     become: yes
     apt: deb=/tmp/{{ item.key }}.deb
     with_dict: "{{ debs }}"
   - name: Download .tar.gz files
     get_url: url={{ item.value.url }} dest=/tmp/{{ item.key }}.tar.gz validate_certs=no
     with_dict: "{{ targzs }}"
   - name: Extract .tar.gz files
     unarchive: src=/tmp/{{ item.key }}.tar.gz dest={{ item.value.target_dir }}
     with_dict: "{{ targzs }}"
#   - include: atom-plugins.yml
   - include: java-oracle.yml
   - include: sdkman.yml
   - name: Install JVM development tools using sdkman
     script: sdkman.sh
   - include: oh-my-zsh.yml
   - name: Symlink oh-my-zsh themes
     file: path={{ home }}/.oh-my-zsh/themes/{{ item }} src={{ home }}/.dev-env/zsh/{{ item }} state=link
     with_items:
      - custom.zsh-theme
   - name: Set zsh as default sh
     become: yes
     shell: "chsh -s $(which zsh) {{ username }}"
   - name: Symlink dotfiles
     file: path={{ home }}/.{{ item }} src={{ home }}/.dev-env/dotfiles/{{ item }} state=link force=yes
     with_items:
      - gitconfig
      - zshrc
      - aliases
   - name: Create config folders
     file: path={{ home }}/.config/{{ item }} state=directory
     with_items:
      - terminator
   - name: Symlink config files
     file: path={{ home }}/.config/{{ item }} src={{ home }}/.dev-env/config/{{ item }} state=link force=yes
     with_items:
      - terminator/config